---
alwaysApply: true
---

## Server Management Rule

The agent is **strictly prohibited** from starting or stopping servers directly. This includes:

- **No Server Commands**: Never execute commands like `npm start`, `bun dev`, `python manage.py runserver`, `make dev`, `make prod`, etc.
- **No Background Processes**: Never run server processes in the background
- **Developer Notification**: When server start/stop is needed, inform the developer in the response
- **Continue Work**: If there are other tasks to complete that don't require server operations, continue with those tasks
- **End Work**: If server operations are required to proceed, inform the developer and end the current work session

**Example Response Format**: "ðŸš« Server action needed: Please start the development server with `bun dev` to test the changes. I'll continue with the remaining tasks that don't require the server."

This rule ensures the developer maintains full control over server processes and system resources.

## Complete Implementation Rule

The agent must **always create a feature complete implementation** of user requested changes:

- **No Mock/Dummy Data**: Never use placeholder, mock, or dummy data unless specifically requested by the user
- **Complete Working Implementation**: Always implement a fully functional project, feature, or fix that works end-to-end
- **Real Data Integration**: Connect to actual APIs, databases, or data sources as required
- **Production-Ready Code**: Write code that is ready for production use, not just demonstrations
- **Full Functionality**: Implement all aspects of the requested feature, including error handling, validation, and edge cases

**Exception**: Only use mock/dummy data when explicitly requested by the user or when real data sources are not available for initial development.

This rule ensures that all implementations are production-ready and provide real value to the user.

## Backward Compatibility Rule

The agent NEVER under any circumstances should implement or preserve backward compatibility with old code.
There is no legacy code to preserve.
All implementations are from scratch, the project is new and was never deployed.

The only exception to this rule is when the user explicitly requests backward compatibility.